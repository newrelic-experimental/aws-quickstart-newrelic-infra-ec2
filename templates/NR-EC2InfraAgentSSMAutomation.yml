AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  NewRelicLicenseKey:
    Type: String
    NoEcho: 'true'
    AllowedPattern: '[A-Za-z0-9]+'
    ConstraintDescription: License Key must match pattern [A-Za-z0-9]+
    Description: (Required) Enter your New Relic License Key. This can be found in
      New Relic One Account settings - under the upper right drop down.
Resources:
  NRLicenseKey:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${AWS::StackName}/NRLicenseKey'
      Type: String
      Value: !Ref 'NewRelicLicenseKey'
      Description: Your New Relic License Key.
  NREC2InfraAgentRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Install NR Infra agent on EC2 instances
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - EC2 Instance State-change Notification
        detail:
          state:
            - running
      Name: NR-EC2InfraAgentRule
      Targets:
        - Id: NR-EC2InfraAgentSSMAutomationDoc
          RoleArn: !GetAtt 'NRSSMAutomationExecutionRole.Arn'
          Arn: !Sub
            - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:automation-definition/${DocumentName}:$DEFAULT
            - DocumentName: !Ref 'NREC2InfraAgentSSMAutomationDoc'
          InputTransformer:
            InputPathsMap:
              instance: $.detail.instance-id
            InputTemplate: '{"InstanceId":[<instance>]}'
  NRSSMAutomationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /service-role/
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
                - ssm.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: NRSSMAutomationExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action: ssm:SendCommand
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:ec2:*:${AWS::AccountId}:instance/*'
              - Action:
                  - ssm:StartAutomationExecution
                Effect: Allow
                Resource:
                  - !Sub
                    - arn:aws:ssm:*:${AWS::AccountId}:automation-definition/${DocumentName}:$DEFAULT
                    - DocumentName: !Ref 'NREC2InfraAgentSSMAutomationDoc'
              - Action: ssm:SendCommand
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:ssm:${AWS::Region}:539736333151:document/New-Relic_Infrastructure'
              - Action:
                  - ssm:List*
                  - ssm:Get*
                  - ssm:Describe*
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:ssm:*:${AWS::AccountId}:*'
              - Effect: Allow
                Action:
                  - ec2:DescribeInstanceStatus
                  - ec2:DescribeTags
                Resource:
                  - '*'
  NREC2InfraAgentSSMAutomationDoc:
    Type: AWS::SSM::Document
    DependsOn: NRLicenseKey
    Properties:
      DocumentType: Automation
      Name: NR-EC2InfraAgentSSMAutomationDoc
      Content:
        description: Automate NR Infra EC2 agent installation
        schemaVersion: '0.3'
        parameters:
          InstanceId:
            type: String
            description: (Required) The ID of the EC2 instance to install NR Infra
              agent on
          NRLicenseKey:
            type: String
            description: (Required) Your New Relic License Key
            default: !Sub '{{ssm:/${AWS::StackName}/NRLicenseKey}}'
          FilterByTag:
            description: Filter by EC2 instance tag
            type: String
            default: 'True'
            allowedValues:
              - 'True'
              - 'False'
        mainSteps:
          - name: GetEC2InstanceState
            action: aws:executeAwsApi
            maxAttempts: 5
            timeoutSeconds: 2
            inputs:
              Service: ec2
              Api: DescribeInstanceStatus
              InstanceIds:
                - '{{InstanceId}}'
            outputs:
              - Name: State
                Selector: $.InstanceStatuses[0].InstanceState.Name
                Type: String
          - maxAttempts: 5
            inputs:
              Service: ec2
              Api: DescribeTags
              Filters:
                - Name: resource-type
                  Values:
                    - instance
                - Name: resource-id
                  Values:
                    - '{{InstanceId}}'
                - Name: tag:NR-Infrastructure
                  Values:
                    - Install
            outputs:
              - Name: TagValue
                Selector: $.Tags[0].Value
                Type: String
            name: GetEC2InstanceTag
            action: aws:executeAwsApi
            timeoutSeconds: 2
          - name: Branch
            action: aws:branch
            inputs:
              Choices:
                - NextStep: End
                  Not:
                    Variable: '{{GetEC2InstanceState.State}}'
                    StringEquals: running
                - NextStep: InstallNewRelicInfraAgent
                  Variable: '{{FilterByTag}}'
                  StringEquals: 'False'
                - NextStep: InstallNewRelicInfraAgent
                  Variable: '{{GetEC2InstanceTag.TagValue}}'
                  StringEquals: Install
            isEnd: true
          - name: InstallNewRelicInfraAgent
            action: aws:runCommand
            inputs:
              InstanceIds:
                - '{{InstanceId}}'
              DocumentName: !Sub 'arn:aws:ssm:${AWS::Region}:539736333151:document/New-Relic_Infrastructure'
              Parameters:
                licenseKey:
                  - '{{NRLicenseKey}}'
            isEnd: true
          - name: End
            action: aws:sleep
            inputs:
              Duration: PT1S
